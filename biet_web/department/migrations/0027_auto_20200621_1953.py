# Generated by Django 3.0.6 on 2020-06-21 14:23

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('department', '0026_auto_20200620_2305'),
    ]

    operations = [
        migrations.CreateModel(
            name='bio_medical_dept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('designation', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='department/BM/image/')),
                ('detail', models.FileField(blank='True', upload_to='department/BM/data/')),
                ('sno', models.IntegerField(default='1')),
                ('staff_type', models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/BM/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/BM/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/BM/')),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/BM/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.bio_medical_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='bio_medical_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/BM/data/timetable/')),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('designation', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='department/BT/image/')),
                ('detail', models.FileField(blank='True', upload_to='department/BT/data/')),
                ('sno', models.IntegerField(default='1')),
                ('staff_type', models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/BT/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/BT/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/BT/')),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/BT/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.bio_technology_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='bio_technology_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/BT/data/timetable/')),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/CH/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/CH/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/CH/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.chemical_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='chemical_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/CH/data/timetable/')),
            ],
        ),
        migrations.CreateModel(
            name='chemistry_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='civil_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/EE/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/EE/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/EE/')),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/EE/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.electrical_and_electronics_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='electrical_and_electronics_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/EE/data/timetable/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/EC/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/EC/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/EC/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/EC/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.electronics_and_communication_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_communication_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/EC/data/timetable/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('designation', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='department/EI/image/')),
                ('detail', models.FileField(blank='True', upload_to='department/EI/data/')),
                ('sno', models.IntegerField(default='1')),
                ('staff_type', models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/EI/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/EI/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/EI/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/EI/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.electronics_and_instrumentation_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='electronics_and_instrumentation_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/EI/data/timetable/')),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/IS/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/IS/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/IS/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.information_science_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='information_science_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/IS/data/timetable/')),
            ],
        ),
        migrations.CreateModel(
            name='mathematics_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='mechanical_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='physics_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('designation', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='department/TX/image/')),
                ('detail', models.FileField(blank='True', upload_to='department/TX/data/')),
                ('sno', models.IntegerField(default='1')),
                ('staff_type', models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_accreditation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('designation', models.TextField(blank=True)),
                ('member_type', models.CharField(choices=[('PAC', 'Program Assessment Committee (PAC)'), ('DAB', 'Department Advisory Board (DAB)')], default='DAB', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_achievements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('STUDENT', 'Student Achievement'), ('STAFF', 'Staff Achievement')], default='STAFF', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_activities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('activity_name', models.CharField(max_length=200)),
                ('activity_description', models.TextField()),
                ('activity_type', models.CharField(choices=[('RE', 'Regular Event'), ('STC', 'Short-term Course')], default='RE', max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_book_chapters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sl_no', models.IntegerField()),
                ('name_of_book_chapter', models.CharField(max_length=500)),
                ('names_of_authors', models.CharField(max_length=500)),
                ('year_of_pub', models.IntegerField()),
                ('name_of_pub', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_classroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classroom', models.FileField(upload_to='department/TX/data/classroom/')),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_events',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('events', models.FileField(upload_to='department/TX/data/events/')),
                ('semester', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_gallery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/TX/')),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_lab_facilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('qty', models.IntegerField()),
                ('config_specs', models.TextField()),
                ('softwares', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_laboratory_facilities_gallary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='department/gallery/TX/laboratory/')),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_major_equipments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_publications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=100)),
                ('y15', models.IntegerField(blank=True, null=True)),
                ('y16', models.IntegerField(blank=True, null=True)),
                ('y17', models.IntegerField(blank=True, null=True)),
                ('y18', models.IntegerField(blank=True, null=True)),
                ('y19', models.IntegerField(blank=True, null=True)),
                ('national_or_inter', models.CharField(max_length=13)),
                ('indexing', models.CharField(blank=True, max_length=500, null=True)),
                ('citations', models.IntegerField(blank=True, null=True)),
                ('impact_factor', models.CharField(blank=True, max_length=80, null=True)),
                ('i10_index', models.IntegerField(blank=True, null=True)),
                ('h_index', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_research_guide',
            fields=[
                ('sno', models.IntegerField(primary_key=True, serialize=False)),
                ('guide_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_research_scholars',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_scholar_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('year_of_regn', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('phD', models.CharField(choices=[('PHD', 'Ph.D.'), ('(PHD)', '(Ph.D.)')], default='(PHD)', max_length=10)),
                ('course_work_completed', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('pre_phD_viva_voce', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('submitted_final_thesis', models.CharField(choices=[('Y', 'Yes'), ('N', 'No')], default='Y', max_length=1)),
                ('phD_awarded_year', models.IntegerField(choices=[(1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (0, 'NA')], default=0)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.textile_technology_dept_research_guide')),
            ],
        ),
        migrations.CreateModel(
            name='textile_technology_dept_timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(choices=[('BE', 'B.E.'), ('MT', 'M.Tech')], default='BE', max_length=100)),
                ('semester', models.IntegerField()),
                ('section', models.CharField(max_length=1)),
                ('timetable', models.FileField(upload_to='department/TX/data/timetable/')),
            ],
        ),
        migrations.DeleteModel(
            name='biotechnology_dept',
        ),
        migrations.DeleteModel(
            name='biotechnology_dept_gallery',
        ),
        migrations.DeleteModel(
            name='electrical_and_electronics_gallery',
        ),
        migrations.DeleteModel(
            name='electronics_and_communication_gallery',
        ),
        migrations.DeleteModel(
            name='textile_dept',
        ),
        migrations.DeleteModel(
            name='textile_dept_gallery',
        ),
        migrations.AddField(
            model_name='chemical_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='chemical_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='chemistry_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='chemistry_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='civil_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='civil_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='electrical_and_electronics_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='electrical_and_electronics_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='electronics_and_communication_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='electronics_and_communication_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='information_science_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='information_science_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='mathematics_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='mathematics_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='mechanical_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='mechanical_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AddField(
            model_name='physics_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AddField(
            model_name='physics_dept',
            name='staff_type',
            field=models.CharField(choices=[('HOD', 'Head Of Department'), ('FACULTY', 'Faculty Member'), ('TECHNICAL', 'Technical Staff'), ('SUPPORTING', 'Supporting Staff')], default='FACULTY', max_length=100),
        ),
        migrations.AlterField(
            model_name='chemical_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/CH/data/'),
        ),
        migrations.AlterField(
            model_name='chemical_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/CH/'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/CHEM/data/'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept',
            name='image',
            field=models.ImageField(upload_to='department/CHEM/image/'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept_classroom',
            name='classroom',
            field=models.FileField(upload_to='department/CHEM/data/classroom/'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept_events',
            name='events',
            field=models.FileField(upload_to='department/CHEM/data/events/'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/CHEM/'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept_laboratory_facilities_gallary',
            name='image',
            field=models.ImageField(upload_to='department/gallery/CHEM/laboratory/'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept_research_scholars',
            name='guide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.chemistry_dept_research_guide'),
        ),
        migrations.AlterField(
            model_name='chemistry_dept_timetable',
            name='timetable',
            field=models.FileField(upload_to='department/CHEM/data/timetable/'),
        ),
        migrations.AlterField(
            model_name='civil_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/CV/data/'),
        ),
        migrations.AlterField(
            model_name='civil_dept_classroom',
            name='classroom',
            field=models.FileField(upload_to='department/CV/data/classroom/'),
        ),
        migrations.AlterField(
            model_name='civil_dept_events',
            name='events',
            field=models.FileField(upload_to='department/CV/data/events/'),
        ),
        migrations.AlterField(
            model_name='civil_dept_laboratory_facilities_gallary',
            name='image',
            field=models.ImageField(upload_to='department/gallery/CV/laboratory/'),
        ),
        migrations.AlterField(
            model_name='civil_dept_research_scholars',
            name='guide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.civil_dept_research_guide'),
        ),
        migrations.AlterField(
            model_name='civil_dept_timetable',
            name='timetable',
            field=models.FileField(upload_to='department/CV/data/timetable/'),
        ),
        migrations.AlterField(
            model_name='computer_science_dept',
            name='sno',
            field=models.IntegerField(default='1'),
        ),
        migrations.AlterField(
            model_name='electrical_and_electronics_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/EE/data/'),
        ),
        migrations.AlterField(
            model_name='electrical_and_electronics_dept',
            name='image',
            field=models.ImageField(upload_to='department/EE/image/'),
        ),
        migrations.AlterField(
            model_name='electronics_and_communication_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/EC/data/'),
        ),
        migrations.AlterField(
            model_name='environmental_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/ENV/'),
        ),
        migrations.AlterField(
            model_name='information_science_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/IS/data/'),
        ),
        migrations.AlterField(
            model_name='information_science_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/IS/'),
        ),
        migrations.AlterField(
            model_name='mathematics_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/MAT/data/'),
        ),
        migrations.AlterField(
            model_name='mathematics_dept_classroom',
            name='classroom',
            field=models.FileField(upload_to='department/MAT/data/classroom/'),
        ),
        migrations.AlterField(
            model_name='mathematics_dept_events',
            name='events',
            field=models.FileField(upload_to='department/MAT/data/events/'),
        ),
        migrations.AlterField(
            model_name='mathematics_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/MAT/'),
        ),
        migrations.AlterField(
            model_name='mathematics_dept_laboratory_facilities_gallary',
            name='image',
            field=models.ImageField(upload_to='department/gallery/MAT/laboratory/'),
        ),
        migrations.AlterField(
            model_name='mathematics_dept_research_scholars',
            name='guide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.mathematics_dept_research_guide'),
        ),
        migrations.AlterField(
            model_name='mathematics_dept_timetable',
            name='timetable',
            field=models.FileField(upload_to='department/MAT/data/timetable/'),
        ),
        migrations.AlterField(
            model_name='mca_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/MCA/'),
        ),
        migrations.AlterField(
            model_name='mechanical_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/ME/data/'),
        ),
        migrations.AlterField(
            model_name='mechanical_dept_classroom',
            name='classroom',
            field=models.FileField(upload_to='department/ME/data/classroom/'),
        ),
        migrations.AlterField(
            model_name='mechanical_dept_events',
            name='events',
            field=models.FileField(upload_to='department/ME/data/events/'),
        ),
        migrations.AlterField(
            model_name='mechanical_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/ME/'),
        ),
        migrations.AlterField(
            model_name='mechanical_dept_laboratory_facilities_gallary',
            name='image',
            field=models.ImageField(upload_to='department/gallery/ME/laboratory/'),
        ),
        migrations.AlterField(
            model_name='mechanical_dept_research_scholars',
            name='guide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.mechanical_dept_research_guide'),
        ),
        migrations.AlterField(
            model_name='mechanical_dept_timetable',
            name='timetable',
            field=models.FileField(upload_to='department/ME/data/timetable/'),
        ),
        migrations.AlterField(
            model_name='physics_dept',
            name='detail',
            field=models.FileField(blank='True', upload_to='department/PHY/data/'),
        ),
        migrations.AlterField(
            model_name='physics_dept_classroom',
            name='classroom',
            field=models.FileField(upload_to='department/PHY/data/classroom/'),
        ),
        migrations.AlterField(
            model_name='physics_dept_events',
            name='events',
            field=models.FileField(upload_to='department/PHY/data/events/'),
        ),
        migrations.AlterField(
            model_name='physics_dept_gallery',
            name='image',
            field=models.ImageField(upload_to='department/gallery/PHY/'),
        ),
        migrations.AlterField(
            model_name='physics_dept_laboratory_facilities_gallary',
            name='image',
            field=models.ImageField(upload_to='department/gallery/PHY/laboratory/'),
        ),
        migrations.AlterField(
            model_name='physics_dept_research_scholars',
            name='guide',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.physics_dept_research_guide'),
        ),
        migrations.AlterField(
            model_name='physics_dept_timetable',
            name='timetable',
            field=models.FileField(upload_to='department/PHY/data/timetable/'),
        ),
    ]
